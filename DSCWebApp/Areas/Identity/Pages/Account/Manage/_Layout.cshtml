@{
    Layout = "~/Views/Shared/_Layout.cshtml";

}
@using DSCWebApp.Models
@inject SignInManager<ApplicationUser> SignInManager
@{
    ViewData["Title"] = "Account Setting";
    var hasExternalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).Any();
}


<br />
<br />
<div class="card  pt-5 pb-5 p-lg-5">





    <div class="ml-lg-5">
        <div class="rounded  ">
            <h3 class=" card-title  mt-5 mb-5 m-lg-5">Account Settings</h3>
            @*<div class="col-md-3 mb-4 mx-4  ">
            <div class="flex-column">
            <ul class="nav nav-pills  rounded p-3 flex-column ">
            <li class="nav-item text-light"><a class="nav-link  @ManageNavPages.IndexNavClass(ViewContext)" id="profile" asp-page="./Index">Profile</a></li>
            <li class="nav-item"><a class="nav-link @ManageNavPages.EmailNavClass(ViewContext)" id="email" asp-page="./Email">Email</a></li>
            <li class="nav-item"><a class="nav-link @ManageNavPages.ChangePasswordNavClass(ViewContext)" id="change-password" asp-page="./ChangePassword">Password</a></li>
            @if (hasExternalLogins)
            {
            <li id="external-logins" class="nav-item"><a id="external-login" class="nav-link @ManageNavPages.ExternalLoginsNavClass(ViewContext)" asp-page="./ExternalLogins">External logins</a></li>
            }
            <li class="nav-item"><a class="nav-link @ManageNavPages.TwoFactorAuthenticationNavClass(ViewContext)" id="two-factor" asp-page="./TwoFactorAuthentication">Two-factor authentication</a></li>
            </ul>

            </div>
            </div>*@
            @RenderBody()
        </div>

    </div>
    <br /><br />
</div>


@section Scripts {
    @RenderSection("Scripts", required: false)
}










